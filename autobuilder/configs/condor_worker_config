# This configuration file is a part of the HTCondor instalaltion.
#
# This configuration file configures an HTCondor Worker node.

DAEMON_LIST = MASTER STARTD
  
# Taken from the manual's instructions on installing a minicondor.
# ------------------------------------------------------------------------------
  
NETWORK_INTERFACE = *
# annex will set this
#CONDOR_HOST = $(FULL_HOSTNAME)
  
SEC_DAEMON_INTEGRITY = REQUIRED
SEC_DAEMON_AUTHENTICATION = REQUIRED
SEC_DAEMON_AUTHENTICATION_METHODS = PASSWORD
SEC_NEGOTIATOR_INTEGRITY = REQUIRED
SEC_NEGOTIATOR_AUTHENTICATION = REQUIRED
SEC_NEGOTIATOR_AUTHENTICATION_METHODS = PASSWORD
SEC_CLIENT_AUTHENTICATION_METHODS = FS, PASSWORD
ALLOW_ADMINISTRATOR = condor_pool@*
ALLOW_DAEMON = condor_pool@*
  
# ------------------------------------------------------------------------------
# The following is different from the instructions because the RHEL7 RPM
# sets $(LOCAL_DIR) in a deeply unfortunate way.
  
# Configure the pool to be externally accessible. While this isn't necessary
# for the proper functioning of an AWS-only pool, condor_annex can't verify
# the accessibility of this host if it's not externally available, and there's
# not presently an option to disable that check.
#
# Note that EC2PublicIP is set by the condor-annex-ec2 package.
TCP_FORWARDING_HOST = $(EC2PublicIP)
#COLLECTOR_HOST = $(TCP_FORWARDING_HOST):9618
ALLOW_WRITE = $(ALLOW_WRITE) $(TCP_FORWARDING_HOST)
ALLOW_DAEMON = $(ALLOW_DAEMON) $(TCP_FORWARDING_HOST)
ALLOW_NEGOTIATOR = $(ALLOW_NEGOTIATOR) $(TCP_FORWARDING_HOST)
 
# Have the master exit if the startd isn't around and it's been given more
# than sixty seconds to show up.  (We could avoid having a timeout if we
# were sure that START_StartTime was undefined before its first start.)
MASTER.DAEMON_SHUTDOWN_FAST = ( STARTD_StartTime == 0 ) && ((CurrentTime - DaemonStartTime) > 60)
 
# Shut the machine down when the master exits.
DEFAULT_MASTER_SHUTDOWN_SCRIPT = /etc/condor/master_shutdown_script.sh
 
# Isolate the temporary directories for each job.
MOUNT_UNDER_SCRATCH = /tmp,/var/tmp
 
# elevate to $USER
UID_DOMAIN = compute.internal
TRUST_UID_DOMAIN = true
 
# Make this worker a partitionable slot
NUM_SLOTS = 1
NUM_SLOTS_TYPE_1 = 1
SLOT_TYPE_1 = 100%
SLOT_TYPE_1_PARTITIONABLE = TRUE